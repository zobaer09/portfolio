[
  {
    "objectID": "tutorials/tutorials2.html",
    "href": "tutorials/tutorials2.html",
    "title": "Learning Collection",
    "section": "",
    "text": "In this tutorial, we will explore how to analyze urban community gardening distribution across different boroughs using R and spatial data analysis techniques. We will use the sf, tidyverse, and ggplot2 libraries to load, clean, and visualize the required data. Let’s begin by setting up the environment and loading the necessary libraries.\n\n# Required Libraries\nlibrary(sf)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(leaflet)\n\n\n\nWe start by reading the GreenThumb_Garden_Info.csv file containing information about the locations of community gardens and converting the ‘multipolygon’ field to an sf object.\nData source: https://data.cityofnewyork.us/dataset/GreenThumb-Garden-Info/p78i-pat6/data\n\n\n\nNext, we load the borough boundaries shapefile, transform its Coordinate Reference System (CRS), and perform a spatial join with the garden data.\n\n# Load the borough shapefile and transform the CRS\nborough_shapefile &lt;- st_read('C:/Users/Zobaer Ahmed/Documents/Zobaer_github_page/portfolio/shapefile/Borough Boundaries/geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2.shp')\n\nReading layer `geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2' from data source `C:\\Users\\Zobaer Ahmed\\Documents\\Zobaer_github_page\\portfolio\\shapefile\\Borough Boundaries\\geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.25559 ymin: 40.49613 xmax: -73.70001 ymax: 40.91553\nGeodetic CRS:  WGS84(DD)\n\nborough_shapefile &lt;- st_transform(borough_shapefile, crs = st_crs(garden_data_sf))\n\n# Perform spatial join\njoined_data &lt;- st_join(borough_shapefile, garden_data_sf, join = st_intersects)\n\n\n\n\nNow, let us calculate the number of gardens present in each borough and merge the result back into the shapefile.\n\n# Count the number of gardens in each borough\nborough_garden_count &lt;- joined_data %&gt;%\n  group_by(boro_name.x) %&gt;%\n  summarise(count = n()) \n\n# Convert the garden count to a regular data frame\nborough_garden_count_df &lt;- as.data.frame(borough_garden_count)\n\n# Merge the count data back into the borough shapefile\nborough_shapefile &lt;- borough_shapefile %&gt;%\n  left_join(borough_garden_count_df, by = c(\"boro_name\" = \"boro_name.x\"))\n\n\n\n\nNow, we create maps illustrating the distribution of gardens across different boroughs along with their respective counts.\n\n# Calculate the centroids of each borough for labeling\ncentroids &lt;- st_centroid(borough_shapefile)\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n# Extract coordinates for labels\nborough_labels &lt;- data.frame(st_coordinates(centroids))\n\n# Add borough names to the labels data frame\nborough_labels$boro_name &lt;- borough_shapefile$boro_name\n\n# Plot the map with borough names\nggplot(data = borough_shapefile) +\n  geom_sf(aes(fill = count), color = 'black') +\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) +\n  scale_fill_viridis_c() +\n  labs(title = 'Distribution of Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThis code generates a base map showing the borough shapes filled with white colors and outlines drawn in black. The red dots represent the location of individual community gardens overlaid on top of the borough boundaries. This plot aims to display the overall spatial distribution of gardens within the study area.\n\nggplot() +\n  geom_sf(data = borough_shapefile, fill = 'white', color = 'black') +\n  geom_sf(data = garden_data_sf, color = \"red\", size = 0.5, alpha = 0.6) +\n  labs(title = \"Spatial Density of Gardens\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThe following code creates a thematic map where each borough shape is filled according to the number of gardens it contains. Additionally, individual garden points are shown as transparent red dots. This plot visually represents both the total number of gardens and their distribution among various boroughs.\n\nggplot() +\n  geom_sf(data = borough_shapefile, aes(fill = count), color = 'black') + # Boroughs colored by garden count\n  geom_sf(data = garden_data_sf, color = \"red\", size = 0.5, alpha = 0.6) + # Garden points\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) + # Borough labels\n  scale_fill_viridis_c() + # Color scale for boroughs\n  labs(title = 'Distribution and Number of Urban Community Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSimilar to the previous example, but with larger garden point sizes and customized color palette for better visual representation.\n\nggplot() +\n  geom_sf(data = borough_shapefile, aes(fill = count), color = 'black') + # Boroughs colored by garden count\n  geom_sf(data = garden_data_sf, color = \"red\", size = 2, alpha = 0.8) + # Garden points with increased size\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) + # Borough labels\n  scale_fill_viridis_c(option = \"C\") + # Custom color scale for boroughs\n  labs(title = 'Distribution and Number of Urban Community Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14, face = \"bold\"),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.caption = element_text(size = 10),\n    plot.background = element_rect(fill = \"#f5f5f5\"),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nThis code snippet performs two main tasks: first, it converts the multi-part geometry columns of the garden_data_sf sf object into single-point geometries; secondly, it creates an interactive leaflet map displaying markers at each garden location.\n\n\n\nTo ensure that our subsequent analyses or visualizations work correctly, especially when dealing with specific functions like clustering or distance calculations, it’s often beneficial to have single-part geometries instead of multi-part ones. Here, we convert the multi-geometry column of the garden_data_sf data frame into separate single-point geometries using the st_cast() function.\n\n# Convert multi-part geometries to single-part\ngarden_data_single &lt;- st_cast(garden_data_sf, \"POINT\")\n\nWarning in st_cast.sf(garden_data_sf, \"POINT\"): repeating attributes for all\nsub-geometries for which they may not be constant\n\n\n\n\n\nAfter converting the multi-part geometries to single-parts, we extract the longitude and latitude values into new columns called lon and lat. These columns will later serve as input variables for creating the leaflet map.\n\n# Create a regular data frame from the sf object\ngarden_data_df &lt;- as.data.frame(garden_data_single)\n\n# Extract longitude and latitude\ngarden_data_df$lon &lt;- st_coordinates(garden_data_single)[, 'X']\ngarden_data_df$lat &lt;- st_coordinates(garden_data_single)[, 'Y']\n\n\n\n\nFinally, we utilize the leaflet package to generate an interactive map displaying markers at every garden location based on the extracted longitude and latitude columns.\n\n# Create a leaflet map\nleaflet(garden_data_df) %&gt;%  \n  addTiles() %&gt;%             # Add default OpenStreetMap tiles\n  addMarkers(                 # Add markers to the map\n              lng = ~lon,      # Set longitude as marker position x coordinate\n              lat = ~lat,      # Set latitude as marker position y coordinate\n              popup = ~gardenname # Display garden name as marker popup text\n            )\n\n\n\n\n\nThis code results in an engaging, dynamic map that allows users to interactively inspect the locations of all community gardens in the dataset.\nEnjoyed the tutorial? Consider fueling my efforts with a coffee!"
  },
  {
    "objectID": "tutorials/tutorials2.html#exploring-the-distribution-of-urban-community-gardens-among-new-york-city-boroughs-through-r-and-spatial-data-visualization",
    "href": "tutorials/tutorials2.html#exploring-the-distribution-of-urban-community-gardens-among-new-york-city-boroughs-through-r-and-spatial-data-visualization",
    "title": "Learning Collection",
    "section": "",
    "text": "In this tutorial, we will explore how to analyze urban community gardening distribution across different boroughs using R and spatial data analysis techniques. We will use the sf, tidyverse, and ggplot2 libraries to load, clean, and visualize the required data. Let’s begin by setting up the environment and loading the necessary libraries.\n\n# Required Libraries\nlibrary(sf)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(leaflet)\n\n\n\nWe start by reading the GreenThumb_Garden_Info.csv file containing information about the locations of community gardens and converting the ‘multipolygon’ field to an sf object.\nData source: https://data.cityofnewyork.us/dataset/GreenThumb-Garden-Info/p78i-pat6/data\n\n\n\nNext, we load the borough boundaries shapefile, transform its Coordinate Reference System (CRS), and perform a spatial join with the garden data.\n\n# Load the borough shapefile and transform the CRS\nborough_shapefile &lt;- st_read('C:/Users/Zobaer Ahmed/Documents/Zobaer_github_page/portfolio/shapefile/Borough Boundaries/geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2.shp')\n\nReading layer `geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2' from data source `C:\\Users\\Zobaer Ahmed\\Documents\\Zobaer_github_page\\portfolio\\shapefile\\Borough Boundaries\\geo_export_2097f264-292b-4741-b4bd-9b58f6a775b2.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.25559 ymin: 40.49613 xmax: -73.70001 ymax: 40.91553\nGeodetic CRS:  WGS84(DD)\n\nborough_shapefile &lt;- st_transform(borough_shapefile, crs = st_crs(garden_data_sf))\n\n# Perform spatial join\njoined_data &lt;- st_join(borough_shapefile, garden_data_sf, join = st_intersects)\n\n\n\n\nNow, let us calculate the number of gardens present in each borough and merge the result back into the shapefile.\n\n# Count the number of gardens in each borough\nborough_garden_count &lt;- joined_data %&gt;%\n  group_by(boro_name.x) %&gt;%\n  summarise(count = n()) \n\n# Convert the garden count to a regular data frame\nborough_garden_count_df &lt;- as.data.frame(borough_garden_count)\n\n# Merge the count data back into the borough shapefile\nborough_shapefile &lt;- borough_shapefile %&gt;%\n  left_join(borough_garden_count_df, by = c(\"boro_name\" = \"boro_name.x\"))\n\n\n\n\nNow, we create maps illustrating the distribution of gardens across different boroughs along with their respective counts.\n\n# Calculate the centroids of each borough for labeling\ncentroids &lt;- st_centroid(borough_shapefile)\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n# Extract coordinates for labels\nborough_labels &lt;- data.frame(st_coordinates(centroids))\n\n# Add borough names to the labels data frame\nborough_labels$boro_name &lt;- borough_shapefile$boro_name\n\n# Plot the map with borough names\nggplot(data = borough_shapefile) +\n  geom_sf(aes(fill = count), color = 'black') +\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) +\n  scale_fill_viridis_c() +\n  labs(title = 'Distribution of Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThis code generates a base map showing the borough shapes filled with white colors and outlines drawn in black. The red dots represent the location of individual community gardens overlaid on top of the borough boundaries. This plot aims to display the overall spatial distribution of gardens within the study area.\n\nggplot() +\n  geom_sf(data = borough_shapefile, fill = 'white', color = 'black') +\n  geom_sf(data = garden_data_sf, color = \"red\", size = 0.5, alpha = 0.6) +\n  labs(title = \"Spatial Density of Gardens\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThe following code creates a thematic map where each borough shape is filled according to the number of gardens it contains. Additionally, individual garden points are shown as transparent red dots. This plot visually represents both the total number of gardens and their distribution among various boroughs.\n\nggplot() +\n  geom_sf(data = borough_shapefile, aes(fill = count), color = 'black') + # Boroughs colored by garden count\n  geom_sf(data = garden_data_sf, color = \"red\", size = 0.5, alpha = 0.6) + # Garden points\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) + # Borough labels\n  scale_fill_viridis_c() + # Color scale for boroughs\n  labs(title = 'Distribution and Number of Urban Community Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSimilar to the previous example, but with larger garden point sizes and customized color palette for better visual representation.\n\nggplot() +\n  geom_sf(data = borough_shapefile, aes(fill = count), color = 'black') + # Boroughs colored by garden count\n  geom_sf(data = garden_data_sf, color = \"red\", size = 2, alpha = 0.8) + # Garden points with increased size\n  geom_text(data = borough_labels, aes(X, Y, label = boro_name), check_overlap = TRUE, nudge_y = 0.02) + # Borough labels\n  scale_fill_viridis_c(option = \"C\") + # Custom color scale for boroughs\n  labs(title = 'Distribution and Number of Urban Community Gardens Across Different Boroughs',\n       fill = 'Number of Gardens') +\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14, face = \"bold\"),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.caption = element_text(size = 10),\n    plot.background = element_rect(fill = \"#f5f5f5\"),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nThis code snippet performs two main tasks: first, it converts the multi-part geometry columns of the garden_data_sf sf object into single-point geometries; secondly, it creates an interactive leaflet map displaying markers at each garden location.\n\n\n\nTo ensure that our subsequent analyses or visualizations work correctly, especially when dealing with specific functions like clustering or distance calculations, it’s often beneficial to have single-part geometries instead of multi-part ones. Here, we convert the multi-geometry column of the garden_data_sf data frame into separate single-point geometries using the st_cast() function.\n\n# Convert multi-part geometries to single-part\ngarden_data_single &lt;- st_cast(garden_data_sf, \"POINT\")\n\nWarning in st_cast.sf(garden_data_sf, \"POINT\"): repeating attributes for all\nsub-geometries for which they may not be constant\n\n\n\n\n\nAfter converting the multi-part geometries to single-parts, we extract the longitude and latitude values into new columns called lon and lat. These columns will later serve as input variables for creating the leaflet map.\n\n# Create a regular data frame from the sf object\ngarden_data_df &lt;- as.data.frame(garden_data_single)\n\n# Extract longitude and latitude\ngarden_data_df$lon &lt;- st_coordinates(garden_data_single)[, 'X']\ngarden_data_df$lat &lt;- st_coordinates(garden_data_single)[, 'Y']\n\n\n\n\nFinally, we utilize the leaflet package to generate an interactive map displaying markers at every garden location based on the extracted longitude and latitude columns.\n\n# Create a leaflet map\nleaflet(garden_data_df) %&gt;%  \n  addTiles() %&gt;%             # Add default OpenStreetMap tiles\n  addMarkers(                 # Add markers to the map\n              lng = ~lon,      # Set longitude as marker position x coordinate\n              lat = ~lat,      # Set latitude as marker position y coordinate\n              popup = ~gardenname # Display garden name as marker popup text\n            )\n\n\n\n\n\nThis code results in an engaging, dynamic map that allows users to interactively inspect the locations of all community gardens in the dataset.\nEnjoyed the tutorial? Consider fueling my efforts with a coffee!"
  },
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Tutorials",
    "section": "",
    "text": "Step into a vast world of knowledge with my collection of tutorials, crafted to cater to a multitude of interests and professional growth goals. Each tutorial is designed as a gateway to mastery in a variety of engaging subjects, offering you the resources to expand your skill set and explore new areas of interest.\n\nTutorial 1: Introduction to Collapsible Trees using R\nTutorial 2: Analyzing Urban Community Gardens: Borough Distribution with R & Spatial Data Visualization\n\nDive into these resources to build and refine your skill set."
  },
  {
    "objectID": "tutorials/index.html#learning-collection",
    "href": "tutorials/index.html#learning-collection",
    "title": "Tutorials",
    "section": "",
    "text": "Step into a vast world of knowledge with my collection of tutorials, crafted to cater to a multitude of interests and professional growth goals. Each tutorial is designed as a gateway to mastery in a variety of engaging subjects, offering you the resources to expand your skill set and explore new areas of interest.\n\nTutorial 1: Introduction to Collapsible Trees using R\nTutorial 2: Analyzing Urban Community Gardens: Borough Distribution with R & Spatial Data Visualization\n\nDive into these resources to build and refine your skill set."
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Zobaer Ahmed",
    "section": "",
    "text": "Embark on a journey through my diverse professional landscape in New York City, where I bring over 10 years of expertise as a data analyst, international researcher, and project manager. My adaptability and dedication to excellence are evident across my varied roles, shaped by my tenure with renowned global organizations. My holistic problem-solving approach is enriched by my leadership and communication abilities, allowing me to navigate complex challenges effectively. My goal is to make a significant, positive impact with every project I tackle. Join me in my mission to innovate and inspire in the realm of data and analysis.\nIf you require my services for freelance projects or consultancies, feel free to get in touch with me."
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Zobaer Ahmed",
    "section": "",
    "text": "Embark on a journey through my diverse professional landscape in New York City, where I bring over 10 years of expertise as a data analyst, international researcher, and project manager. My adaptability and dedication to excellence are evident across my varied roles, shaped by my tenure with renowned global organizations. My holistic problem-solving approach is enriched by my leadership and communication abilities, allowing me to navigate complex challenges effectively. My goal is to make a significant, positive impact with every project I tackle. Join me in my mission to innovate and inspire in the realm of data and analysis.\nIf you require my services for freelance projects or consultancies, feel free to get in touch with me."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Zobaer Ahmed",
    "section": "Education",
    "text": "Education\n\nPhD in Environmental Dynamics, 2023, University of Arkansas (USA)\nMSc in Rural Development, 2019, Ghent University (Belgium), Pisa University (Italy) and Humboldt University of Berlin (Germany)\nMSc in Disaster/Climate Change Management, 2014, University of Dhaka (Bangladesh)\nBSc, Agriculture, 2012, Bangabandhu Sheikh Mujibur Rahman Agricultural University (Bangladesh)"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Zobaer Ahmed",
    "section": "Experience",
    "text": "Experience\n\nDirector Research and Evaluation\nNYC Mayor’s Office to ENDGBV\n07-2023– Present | New York City, NY, USA\nSenior Research Assistant\nCAST, University of Arkansas\n05-2021– 07-2023 | Fayetteville, AR, USA\nGraduate Research Assistant\nArkansas State University\n01-2020– 05-2021 | Jonesboro, AR, USA\nResearch, Monitoring, Evaluation and Learning (RMEL) Assistant Manager\nFriendship NGO\n01-2013– 08-2017 | Dhaka, BGD\nResearch Country Manager\nPremise Data\n03-2016– 09-2017 | California, CA, USA"
  },
  {
    "objectID": "index.html#tools-software",
    "href": "index.html#tools-software",
    "title": "Zobaer Ahmed",
    "section": "Tools & Software",
    "text": "Tools & Software\nI’m skilled in a suite of technical software and tools which fortify my analytical prowess. These include:\n\n\nData Analysis & Management: Proficient in R-Studio, Python, SPSS, and Power BI for comprehensive data analysis and visualization.\nGeospatial Mapping: Expert in using ArcGIS Pro, ArcMap, and Google Earth Engine for detailed geospatial modeling and mapping.\nProject Planning: Utilizing Lean Six Sigma, MS Project, Theory of Change, Logical Framework and Monitoring and Evaluation tool kits for efficient project management and planning.\nStatistical Computing: R-Studio, Jupyter Notebook and Spyder are my go-tos for statistical computation and machine learning application.\nVersion Control: Managing code versions and collaborations through GitHub ensures workflow integrity.\nLiterature Management: Mendeley and Zotero for organizing research references and citations.\nSurvey Development: Designing and conducting surveys with tools like Qualtrics, SurveyMonkey, Open Data Kit, and Kobo Toolbox.\nAI & Machine Learning: Exploring the capabilities of Large Language Models (LLMs) to integrate artificial intelligence into data-driven solutions."
  },
  {
    "objectID": "resources.html#resource-2",
    "href": "resources.html#resource-2",
    "title": "Resources",
    "section": "Resource 2",
    "text": "Resource 2"
  },
  {
    "objectID": "resources.html#resource-3",
    "href": "resources.html#resource-3",
    "title": "Resources",
    "section": "Resource 3",
    "text": "Resource 3"
  },
  {
    "objectID": "tutorials/tutorials1.html",
    "href": "tutorials/tutorials1.html",
    "title": "Learning Collection",
    "section": "",
    "text": "In this tutorial, we will explore how to generate collapsible trees with the collapsibleTree package in R. Let’s begin by installing and loading the required packages if you haven’t already. You may need to modify the installation paths based on your system configuration.\n\n# Install necessary packages (if not installed):\n# install.packages(\"collapsibleTree\")\n# install.packages(\"readxl\")\n# install.packages(\"dplyr\")\n# install.packages(\"colorspace\")\n\n# Load libraries\nlibrary(collapsibleTree)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(colorspace)\n\nNow let’s load our dataset containing geographical information. In this example, we use an Excel file named ‘Geography Table_Data.World.xlsx’ downloaded from (https://data.world/glx/geography-table). Adjust the path accordingly for your local files.\n\n# Read data from Excel file\nGeography &lt;- read_xlsx(\"C:/Users/Zobaer Ahmed/Documents/Zobaer_github_page/portfolio/data/Geography Table_Data.World.xlsx\")\n\n# Display summary of loaded data (if needed delete the \"#\" sign)\n# summary(Geography)\n\nNext, we will display a collapsible tree representing the hierarchical structure of continents, types, and countries using the collapsibleTree() function. Click any node and see the magic.\n\n\n\n\n\n\nTo further customize the tree, we can calculate the number of countries per continent and type, then add these counts as attributes for each node. This allows us to view the count when expanding nodes.\n\n\n\n\n\n\n\n\n\n\n\n\nLastly, let’s demonstrate creating a collapsible tree for organizational structures using a sample dataset. Replace the last two code blocks below with the following examples."
  },
  {
    "objectID": "tutorials/tutorials1.html#getting-started-with-collapsible-trees-using-r-a-simple-tutorial",
    "href": "tutorials/tutorials1.html#getting-started-with-collapsible-trees-using-r-a-simple-tutorial",
    "title": "Learning Collection",
    "section": "",
    "text": "In this tutorial, we will explore how to generate collapsible trees with the collapsibleTree package in R. Let’s begin by installing and loading the required packages if you haven’t already. You may need to modify the installation paths based on your system configuration.\n\n# Install necessary packages (if not installed):\n# install.packages(\"collapsibleTree\")\n# install.packages(\"readxl\")\n# install.packages(\"dplyr\")\n# install.packages(\"colorspace\")\n\n# Load libraries\nlibrary(collapsibleTree)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(colorspace)\n\nNow let’s load our dataset containing geographical information. In this example, we use an Excel file named ‘Geography Table_Data.World.xlsx’ downloaded from (https://data.world/glx/geography-table). Adjust the path accordingly for your local files.\n\n# Read data from Excel file\nGeography &lt;- read_xlsx(\"C:/Users/Zobaer Ahmed/Documents/Zobaer_github_page/portfolio/data/Geography Table_Data.World.xlsx\")\n\n# Display summary of loaded data (if needed delete the \"#\" sign)\n# summary(Geography)\n\nNext, we will display a collapsible tree representing the hierarchical structure of continents, types, and countries using the collapsibleTree() function. Click any node and see the magic.\n\n\n\n\n\n\nTo further customize the tree, we can calculate the number of countries per continent and type, then add these counts as attributes for each node. This allows us to view the count when expanding nodes.\n\n\n\n\n\n\n\n\n\n\n\n\nLastly, let’s demonstrate creating a collapsible tree for organizational structures using a sample dataset. Replace the last two code blocks below with the following examples."
  },
  {
    "objectID": "tutorials/tutorials1.html#complex-collapsible-trees-example",
    "href": "tutorials/tutorials1.html#complex-collapsible-trees-example",
    "title": "Learning Collection",
    "section": "Complex Collapsible Trees Example",
    "text": "Complex Collapsible Trees Example\n\nI have generated a complex collaborative tree utilizing my proprietary datasets, which unfortunately cannot be shared publicly. However, I would like to provide you with a snapshot of the expanded tree above.\nIf you wish to recreate similar results using your own datasets, follow the steps outlined in the earlier parts of this tutorial. Remember, the process involves importing data into R, cleaning it up, and finally rendering the tree using the `collapsibleTree()` function from the `collapsibleTree` package. Good luck, and feel free to reach out if you encounter any issues during implementation!\nEnjoyed the tutorial? Consider fueling my efforts with a coffee!\n\nReferences: This tutorial is based on the documentation provided by Adeel Khan on his https://adeelk93.github.io/collapsibleTree/"
  },
  {
    "objectID": "publications/publication1.html",
    "href": "publications/publication1.html",
    "title": "Winter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation",
    "section": "",
    "text": "Ahmed, Z., Nalley, L., Brye, K., Steven Green, V., Popp, M., Shew, A. M., & Connor, L. (2023). Winter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation. International Journal of Applied Earth Observation and Geoinformation, 125, 103564."
  },
  {
    "objectID": "publications/publication1.html#citation-apa-7",
    "href": "publications/publication1.html#citation-apa-7",
    "title": "Winter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation",
    "section": "",
    "text": "Ahmed, Z., Nalley, L., Brye, K., Steven Green, V., Popp, M., Shew, A. M., & Connor, L. (2023). Winter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation. International Journal of Applied Earth Observation and Geoinformation, 125, 103564."
  },
  {
    "objectID": "publications/publication1.html#abstract",
    "href": "publications/publication1.html#abstract",
    "title": "Winter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation",
    "section": "Abstract",
    "text": "Abstract\nAccurately identifying and systematically mapping winter-time cover crops and their phenological characteristics offer significant benefits to agricultural producers and policymakers, as cover crops are one of several potential solutions to climate change mitigation. We present a methodological framework for identifying and mapping the presence of winter-time cover crops at the field level and aggregated to county scales from 2013 to 2019 by using the Google Earth Engine (GEE), a random forest classifier with time series data from Landsat 8, and yearly cover crop training data from the United States Department of Agriculture (USDA)-Natural Resources Conservation Service (NRCS). The methodology was tested with data from the Mississippi Alluvial Plain (MAP) region. Despite the inter-annual agronomic and climatic variations across space, results demonstrated an overall mean classification accuracy of 97.7%, with a kappa coefficient of 0.94. Results also revealed a 34% increase in model-predicted cover crop adoption in the study region from 2013 to 2019. Based on GEE, this study created, for the first time, a 30-m spatial and temporal resolution binary annual datasets and then aggregated them at the county level within the MAP study region. This multi-year novel dataset may improve our ability to anticipate and quantify the impact of summer crop production gains owing to cover crop adoption for extended periods and evaluate the adoption of cover crops on local soil ecosystems, biogeochemical cycles, and services. The methodology developed and tested broadly applies to other regions where cover crops have been promoted for climate-change mitigation and improving soil health for long-term sustainability. Agricultural producers, policymakers, and cost-share providers may use this information to develop agricultural conservation methods and land-use policies that minimize soil erosion and help mitigate climate change effects in the long run."
  },
  {
    "objectID": "publications/index.html",
    "href": "publications/index.html",
    "title": "Publications",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nType\n\n\nPublication\n\n\nYear\n\n\n\n\n\n\nWinter-time cover crop identification: A remote sensing-based methodological framework for new and rapid data generation\n\n\nArticle\n\n\nInternational Journal of Applied Earth Observation and Geoinformation\n\n\n2023\n\n\n\n\nAn examination of thematic research, development, and trends in remote sensing applied to conservation agriculture\n\n\nArticle\n\n\nInternational Soil and Water Conservation Research\n\n\n2024\n\n\n\n\nClimate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh\n\n\nArticle\n\n\nJournal of Rural Studies\n\n\n2022\n\n\n\n\nClimate change risk perceptions and agricultural adaptation strategies in vulnerable riverine char islands of Bangladesh\n\n\nArticle\n\n\nLand Use Policy\n\n\n2021\n\n\n\n\nAgriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation\n\n\nBook Chapter\n\n\nSpringer Geography\n\n\n2021\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications/publication2.html",
    "href": "publications/publication2.html",
    "title": "In the eye of the beholder: A comprehensive analysis of stimulus type, perceiver, and target in physical attractiveness perceptions",
    "section": "",
    "text": "Bowdring, M. A., Sayette, M. A., Girard, J. M., & Woods, W. C. (2021). In the eye of the beholder: A comprehensive analysis of stimulus type, perceiver, and target in physical attractiveness perceptions. Journal of Nonverbal Behavior, 45(2), 241–259."
  },
  {
    "objectID": "publications/publication2.html#citation-apa-7",
    "href": "publications/publication2.html#citation-apa-7",
    "title": "In the eye of the beholder: A comprehensive analysis of stimulus type, perceiver, and target in physical attractiveness perceptions",
    "section": "",
    "text": "Bowdring, M. A., Sayette, M. A., Girard, J. M., & Woods, W. C. (2021). In the eye of the beholder: A comprehensive analysis of stimulus type, perceiver, and target in physical attractiveness perceptions. Journal of Nonverbal Behavior, 45(2), 241–259."
  },
  {
    "objectID": "publications/publication2.html#abstract",
    "href": "publications/publication2.html#abstract",
    "title": "In the eye of the beholder: A comprehensive analysis of stimulus type, perceiver, and target in physical attractiveness perceptions",
    "section": "Abstract",
    "text": "Abstract\nPhysical attractiveness plays a central role in psychosocial experiences. One of the top research priorities has been to identify factors affecting perceptions of physical attractiveness (PPA). Recent work suggests PPA derives from different sources (e.g., target, perceiver, stimulus type). Although smiles in particular are believed to enhance PPA, support has been surprisingly limited. This study comprehensively examines the effect of smiles on PPA and, more broadly, evaluates the roles of target, perceiver, and stimulus type in PPA variation. Perceivers (n=181) rated both static images and 5-s videos of targets displaying smiling and neutral-expressions. Smiling images were rated as more attractive than neutral-expression images (regardless of stimulus motion format). Interestingly, perceptions of physical attractiveness were based more on the perceiver than on either the target or format in which the target was presented. Results clarify the effect of smiles, and highlight the significant role of the perceiver, in PPA."
  },
  {
    "objectID": "publications/publication5.html",
    "href": "publications/publication5.html",
    "title": "Agriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation",
    "section": "",
    "text": "Ahmed, Z., Lotze-Campen, H., & Kabir, M. H. (2021). Agriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation. Springer Geography, 275–289."
  },
  {
    "objectID": "publications/publication5.html#citation-apa-7",
    "href": "publications/publication5.html#citation-apa-7",
    "title": "Agriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation",
    "section": "",
    "text": "Ahmed, Z., Lotze-Campen, H., & Kabir, M. H. (2021). Agriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation. Springer Geography, 275–289."
  },
  {
    "objectID": "publications/publication5.html#abstract",
    "href": "publications/publication5.html#abstract",
    "title": "Agriculture in Riverine Chars: Vulnerabilities to Climate Change and Community-Based Adaptation",
    "section": "Abstract",
    "text": "Abstract\nThis study explores char dwellers’ vulnerabilities and responses to climate change and other natural disasters and the existing community-based agricultural adaptations. Both quantitative and qualitative data have been used from a study carried out in Raydas Bari Char in Gaibandha District. Using SENTINEL 2 and LANDSAT 8 satellite imageries, annual flood vulnerability map and drainage patterns based on topography have been produced. The historical monthly mean temperature and rainfall graphs were also produced to showcase local hazards and vulnerabilities. The study findings show that char agriculture is highly vulnerable particularly to frequent flooding, continuous erosion, and seasonal drought. The study further reveals that char farmers adopted several community-based adaptation strategies in agriculture such as introducing new disaster tolerant crop varieties, water intensive irrigation system, changing planting times, and cultivating short duration varieties. A holistic developmental approach, including enhancing access to finance, capacity building, effective community governance and targeted policies, are needed to enhance local adaptations and building resilience to reduce vulnerabilities to natural hazards in char agriculture."
  },
  {
    "objectID": "publications/publication3.html",
    "href": "publications/publication3.html",
    "title": "Climate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh",
    "section": "",
    "text": "Ahmed, Z., Shew, A. M., Mondal, M. K., Yadav, S., Jagadish, S., Prasad, P., Buisson, M. C., Das, M., & Bakuluzzaman, M. (2022). Climate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh. Journal of Rural Studies, 94, 274–286."
  },
  {
    "objectID": "publications/publication3.html#citation-apa-7",
    "href": "publications/publication3.html#citation-apa-7",
    "title": "Climate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh",
    "section": "",
    "text": "Ahmed, Z., Shew, A. M., Mondal, M. K., Yadav, S., Jagadish, S., Prasad, P., Buisson, M. C., Das, M., & Bakuluzzaman, M. (2022). Climate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh. Journal of Rural Studies, 94, 274–286."
  },
  {
    "objectID": "publications/publication3.html#abstract",
    "href": "publications/publication3.html#abstract",
    "title": "Climate risk perceptions and perceived yield loss increases agricultural technology adoption in the polder areas of Bangladesh",
    "section": "Abstract",
    "text": "Abstract\nThe effects of climate change are likely to increase the frequency of flood, drought, and salinity events in the coastal areas of Bangladesh, posing many challenges for agrarian communities. Sustainable intensification in the form of improved agricultural management practices and new technologies may help farmers cope with stress and adapt to changing conditions. In this study, we explore how climate change perceptions of agricultural risk affect adaptation to climate change through technology adoption in a unique landscape: the polders of Bangladesh. In 2016, a survey was conducted in 1003 households living on these artificial, leveed islands facing the Bay of Bengal. We analyzed the responses from polder residents to construct a climate risk index which quantifies climate risk perception in this highly vulnerable agrarian landscape. We analyzed how polder demographics influence their perceptions about climatic change using seemingly unrelated regression (SUR). Further, by using three bivariate probit regression models, we estimated how the perception of climate risk drives the differential adoption of new agricultural technologies. Our findings show that farmers perceive polder agriculture as highly vulnerable to four environmental change factors: flooding, drought, salinity, and pest infestation. The SUR model suggests that farmer demographics, community group memberships, and access to different inputs and services strongly influence climatic risk perceptions. Findings also suggest that polder farmers with higher risk perceptions have a higher propensity to adopt both chemical and mechanical adaptation strategies. Cost, however, limits the ability of farmers to adopt improved technologies, suggesting an opportunity for institution-led approaches."
  }
]